# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: INFO
    io.github.jhipster: INFO
    com.attijari: INFO
    org.springframework.web: DEBUG
    org.springframework.ws.client.MessageTracing.sent: DEBUG
    org.springframework.ws.server.MessageTracing.sent: DEBUG
    org.springframework.ws.client.MessageTracing.received: TRACE
    org.springframework.ws.server.MessageTracing.received: TRACE

management:
  metrics:
    export:
      prometheus:
        enabled: false

spring:
  profiles:
    active: recette
    include:
      - swagger
      - no-liquibase
      # Uncomment to activate TLS for the dev profile
      #- tls
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    #    url: jdbc:oracle:thin:@//attrecette-scan.bank-sud.tn:1521/dbdepta
    #    username: tsf_rec
    #    password: tsf_rec
    hikari:
      poolName: Hikari
      auto-commit: false
  jpa:
    show-sql: false
  # Replace by 'prod, faker' to add the faker context and have sample data loaded in production
  liquibase:
    contexts: prod
  mail:
    host: localhost
    port: 25
    username:
    password:
  thymeleaf:
    cache: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  sleuth:
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true

# ===================================================================
# To enable TLS in production, generate a certificate using:
# keytool -genkey -alias tfs_backend -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#   port: 443
#   ssl:
#     key-store: classpath:config/tls/keystore.p12
#     key-store-password: password
#     key-store-type: PKCS12
#     key-alias: selfsigned
#     # The ciphers suite enforce the security by deactivating some old and deprecated SSL cipher, this list was tested against SSL Labs (https://www.ssllabs.com/ssltest/)
#     ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
# ===================================================================
server:
  port: 9090
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  http:
    cache: # Used by the CachingHttpHeadersFilter
      timeToLiveInDays: 1461
  cors:
    allowed-origins: 'http://172.28.11.73:8080,http://172.28.11.175:99'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        # As this is the PRODUCTION configuration, you MUST change the default key, and store it securely:
        # - In the JHipster Registry (which includes a Spring Cloud Config server)
        # - In a separate `application-prod.yml` file, in the same folder as your executable JAR file
        # - In the `JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET` environment variable
        base64-secret: MDNkNDUzNDM3Y2MyMzBhNDk0NzRiMjM3NWJiMmZkOGU1OTMzNDg2NTkxMDQyOGY0MWM1MTIyZjliZTIyNTI0OWNmNjVmZTMwOWE2MjcwMmEyZjg0ZDczMWFhMjRmNmI4MDAyMGM0MjI0YTE3YTdhMTQxYTg2ODZmZGU4YjM4YTc=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://172.28.11.73:8080/ # Modify according to your server's URL
  metrics:
    logs: # Reports metrics in the logs
      enabled: false
      report-frequency: 60 # in seconds
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  audit-events:
    retention-period: 30 # Number of days before audit events are deleted.

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
ftp:
  host: 172.28.14.99
  port: 6621
  user: ftptsf
  password: ftptsf@ttij@ri
  account: ftptsf
middleware:
  protocol: http://
  host: 172.28.11.33
  port: 7080
  username: a46bfba74e680149ec4803bafd11c7f4
  password: 0d479040d31cc9c7745e4724f969ddfa
  uri:
    systeme: ABTServiceMiddleware/systeme
    delta: ABTServiceMiddleware/delta
    idc: ABTServiceMiddleware/idc
    bct: ABTServiceMiddleware/bct
    aif: ABTServiceMiddleware/AIF
  authorization: Basic Mzk4YTczODkyZDBlOTNiYjg4YmY3MTQ3NjdmODk5MmE6OGVkMjkzOTEwNGI5N2RjZThmYmNkNzY0MzI0NWExZmY=
java:
  naming:
    factory:
      initial: com.sun.jndi.ldap.LdapCtxFactory
    security:
      authentication: simple
      principal: bank-sud\
    referral: follow
    provider:
      url: ldap://172.28.14.97:389
mail:
  authentication: /authenticate
  electronic-sign: /offer/signatureContrat/
sign:
  address_uri: http://172.28.11.211:8080

callback: http://172.28.11.73:8080

bo:
  url: http://172.28.11.175:99
